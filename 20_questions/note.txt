/*
import java.io.*;
import java.util.*;

public class QuestionTree {
   private static QuestionNode overallRoot;
   private Scanner console;
   
   public static void main(String[] args) throws FileNotFoundException{
      QuestionTree tree = new QuestionTree();
      read(new Scanner(new File("question.txt")));
      //	 write(new PrintStream(new File("question.txt")));
   }
   
   // constructor
   public QuestionTree(){
      overallRoot = new QuestionNode("computer");
      console = new Scanner(System.in);
   }
   
   public void askQuestions() {
      overallRoot = askQuestionHelper(overallRoot); 
   }
   private QuestionNode askQuestionHelper(QuestionNode overallRoot){
      if(overallRoot != null){
         if(overallRoot.left == null && overallRoot.right == null){
         
            System.out.print("Would your object happen to be " + overallRoot.data + "? (y/n)? ");
            String answer = console.nextLine();
            
            if(answer.equals("y")){
               System.out.println("Great, I go it right!");
            }else{ // answer is no
               overallRoot = answerHelper(overallRoot);
            }
         }
      }
      return overallRoot;
   }
   private QuestionNode answerHelper(QuestionNode overallRoot){
      System.out.print("What is the name of your object? " );
      String name = console.nextLine();
      QuestionNode nameNode = new QuestionNode(name);
      System.out.println("Please give me a yes/ no question that");
      System.out.println("distinguishes between your object");
      System.out.print("and mine-->");
      String question = console.nextLine();
      System.out.print("and what is the answer for your object?(y/n)? ");
      String objectAnswer = console.nextLine();
      
      if(objectAnswer.equals
      
   }
   // replace the current tree by reading another tree from a file
   public static void read(Scanner input) {
      overallRoot = readHelper(input);
   }
   private static QuestionNode readHelper(Scanner input) {
      QuestionNode root = new QuestionNode(null);
      if(input.hasNextLine()){
         String type = input.nextLine();
         String data = input.nextLine();
         if(type.equals("A")){
            root = new QuestionNode(data);
         }else{
            root = new QuestionNode(data, readHelper(input), readHelper(input));
         }
      }
      return root;
   }
   
   // Taken in given printStream output
   // store the current tree to an output file
   public  void write(PrintStream output) {
      overallRoot = writeHelper(output, overallRoot);
      
   }
   private QuestionNode writeHelper(PrintStream output, QuestionNode overallRoot) {
      if(overallRoot != null){
         overallRoot.left = writeHelper(output, overallRoot.left);
         overallRoot.right = writeHelper(output, overallRoot.right);
         if(overallRoot.left == null & overallRoot.right == null){
            output.println("A:\n" + overallRoot.data);
         }else{
            output.println("Q:\n" + overallRoot.data);
         }
      }
      return overallRoot;
   }
   
   // post: asks the user a question, forcing an answer of "y" or "n";
   //       returns true if the answer was yes, returns false otherwise
   public boolean yesTo(String prompt) {
      System.out.print(prompt + " (y/n)? ");
      String response = console.nextLine().trim().toLowerCase();
      while (!response.equals("y") && !response.equals("n")) {
         System.out.println("Please answer y or n.");
         System.out.print(prompt + " (y/n)? ");
         response = console.nextLine().trim().toLowerCase();
      }
      return response.equals("y");
   }
}
*/